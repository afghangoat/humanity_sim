<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36" version="26.2.5">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="2731" dy="2170" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" background="none" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="12iLxfwusQhPmBF76erP-1" value="GameManager" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="65" y="-270" width="200" height="330" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-10" value="- window: sf::RenderWindow*&amp;nbsp;&lt;div&gt;-&amp;nbsp;view_offset_x: int&lt;/div&gt;&lt;div&gt;-&amp;nbsp;view_offset_y: int&lt;/div&gt;&lt;div&gt;- camera_speed: int&lt;/div&gt;&lt;div&gt;- clock: sf::Clock&lt;/div&gt;&lt;div&gt;- delta_time: float&lt;/div&gt;&lt;div&gt;- world: World&lt;/div&gt;&lt;div&gt;- processer: PostProcesser*&lt;/div&gt;&lt;div&gt;- buttons:&amp;nbsp;std::vector&amp;lt;ui::Button&amp;gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-1" vertex="1">
          <mxGeometry y="26" width="200" height="144" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-1" vertex="1">
          <mxGeometry y="170" width="200" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-11" value="-&amp;nbsp;handle_inputs(): void&lt;div&gt;-&amp;nbsp;update_world(): void&lt;/div&gt;&lt;div&gt;- draw_world(): void&lt;/div&gt;&lt;div&gt;+ GameManager()&lt;/div&gt;&lt;div&gt;+ run(): void&lt;/div&gt;&lt;div&gt;+ game_loop(): void&lt;/div&gt;&lt;div&gt;+ setup_buttons(): void&lt;/div&gt;&lt;div&gt;+ update_buttons(): void&lt;/div&gt;&lt;div&gt;+ ~GameManager()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-1" vertex="1">
          <mxGeometry y="178" width="200" height="152" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-2" value="GameConfig" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="640" y="-390" width="320" height="350" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-22" value="-&amp;nbsp;TILE_SIZE: int&lt;div&gt;-&amp;nbsp;debug_level: int&lt;/div&gt;&lt;div&gt;- target_fps: int&lt;/div&gt;&lt;div&gt;- screen_width: int&lt;/div&gt;&lt;div&gt;- screen_height: int&lt;/div&gt;&lt;div&gt;-&amp;nbsp;world_size: int&lt;/div&gt;&lt;div&gt;+ berry_growth_time: float&lt;/div&gt;&lt;div&gt;+ max_tree_age: float&lt;/div&gt;&lt;div&gt;+ max_spawn_tries: float&lt;/div&gt;&lt;div&gt;+ resource_scarcity: int&lt;/div&gt;&lt;div&gt;+ hostiles_count: int&lt;/div&gt;&lt;div&gt;+ day_length: float&lt;/div&gt;&lt;div&gt;+ max_city_size: int&lt;/div&gt;&lt;div&gt;- mtx: std::mutex&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-2" vertex="1">
          <mxGeometry y="26" width="320" height="214" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-23" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-2" vertex="1">
          <mxGeometry y="240" width="320" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-24" value="- GameConfig()&lt;div&gt;+&amp;nbsp;GameConfig(const GameConfig&amp;amp;) {delete}&lt;/div&gt;&lt;div&gt;+ operator=(const GameConfig&amp;amp;):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GameConfig&amp;amp; {delete}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ static get_instance(): GameConfig&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;get_world_size() const: int&lt;/div&gt;&lt;div&gt;+ set_world_size(newsize: int): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-2" vertex="1">
          <mxGeometry y="248" width="320" height="102" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-3" value="PostProcesser" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="290" y="-230" width="320" height="308" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-12" value="-&amp;nbsp;vignette_sprite: sf::Sprite&lt;div&gt;- colorRect: sf::RectangleShape&lt;/div&gt;&lt;div&gt;- noise_sprit&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;e: sf::Sprite&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;chromatic_aberration_sprit&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;e: sf::Sprite&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;vignette_enabled&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- overlay_enabled&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- noise_enabled&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;chromatic_aberration_enabled&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: bool&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-3" vertex="1">
          <mxGeometry y="26" width="320" height="134" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-15" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-3" vertex="1">
          <mxGeometry y="160" width="320" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-14" value="+&amp;nbsp;PostProcesser()&lt;div&gt;+ ~PostProcesser()&lt;/div&gt;&lt;div&gt;+&amp;nbsp;toggle_vignette(newval: bool): void&lt;/div&gt;&lt;div&gt;+&amp;nbsp;toggle_noise(&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;newval:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;toggle_chromatic_aberration(newval: bool): void&lt;/div&gt;&lt;div&gt;+&amp;nbsp;setTextureFor(what:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::Sprite&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, filename:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;setRenderSize(x&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y: double): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw(window:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;setColorOverlay(r&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, g&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, b&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, a: int): void&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-3" vertex="1">
          <mxGeometry y="168" width="320" height="140" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-4" value="Profession" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1495" y="920" width="320" height="170" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-1" value="-&amp;nbsp;background_image: sf::Sprite&lt;div&gt;- profession_image: sf::Sprite&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-4" vertex="1">
          <mxGeometry y="26" width="320" height="44" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-4" vertex="1">
          <mxGeometry y="70" width="320" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-4" value="+ Profession(intype: std::string)&lt;div&gt;+ setTexture(filename: std::string):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ setPosition(x:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;draw(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;load_profession(new_profession:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-4" vertex="1">
          <mxGeometry y="78" width="320" height="92" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-5" value="RandomGenerator" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-500" y="340" width="350" height="190" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-30" value="- rd:&amp;nbsp;std::random_device&amp;nbsp;&lt;div&gt;- gen:&amp;nbsp;std::mt19937&lt;/div&gt;&lt;div&gt;- mtx: std::mutex&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-5" vertex="1">
          <mxGeometry y="26" width="350" height="64" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-31" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-5" vertex="1">
          <mxGeometry y="90" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-32" value="-&amp;nbsp;RandomGenerator()&lt;div&gt;+&amp;nbsp;RandomGenerator(RandomGenerator&amp;amp;) {delete}&lt;/div&gt;&lt;div&gt;+ operator=(RandomGenerator&amp;amp;):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RandomGenerator&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{delete}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;static get_instance():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;RandomGenerator&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;get_random_int(max: int): int&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-5" vertex="1">
          <mxGeometry y="98" width="350" height="92" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-7" value="«interface»&lt;br&gt;&lt;b&gt;Shadowable&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=40;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1640" y="-240" width="290" height="330" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-0" value="- shadow: sf::Sprite&lt;div&gt;-&amp;nbsp;originalShadowPos: sf::Vector2f&lt;/div&gt;&lt;div&gt;-&amp;nbsp;inner_skew: float&lt;/div&gt;&lt;div&gt;-&amp;nbsp;height_offset: double = 0.0&lt;/div&gt;&lt;div&gt;- shadow_strength: int = 150&lt;/div&gt;&lt;div&gt;- skew_offset: float = 0.01f&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-7">
          <mxGeometry y="40" width="290" height="100" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-1" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-7">
          <mxGeometry y="140" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-2" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;get_height_offset() const: double&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_shadow_strength() const: int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_skew_offset() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ set_height_offset(new_val: double): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ set_shadow_strength(new_val: int): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ set_skew_offset(new_val: float): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ ~Shadowable() = default {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setShadowTexture(filename: std::string): bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setShadow(ySize: float, xSkew: float): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setShadowDayNightCycle(delta_time:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setShadowPosition(x: double, y: double): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ drawShadow(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-7">
          <mxGeometry y="148" width="290" height="182" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-8" value="SoundPlayer" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-310" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-16" value="- sounds:&amp;nbsp;std::unordered_map&amp;lt;std::&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;string, sf::SoundBuffer&amp;gt;&lt;/span&gt;&lt;div&gt;&lt;div&gt;- cur_sound: sf::Sound&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-8" vertex="1">
          <mxGeometry y="26" width="360" height="44" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-17" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-8" vertex="1">
          <mxGeometry y="70" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-18" value="+ load_sound(filename: string): void&lt;div&gt;+ play_sound&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(filename: string): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ stop_sound(): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-8" vertex="1">
          <mxGeometry y="78" width="360" height="72" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-9" value="TerrainContainer {template &amp;lt;T&amp;gt;}" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="515" y="178" width="340" height="310" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-7" value="- in_array: T** = nullptr&lt;div&gt;- width: int = 0&lt;/div&gt;&lt;div&gt;- height: int = 0&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-9">
          <mxGeometry y="26" width="340" height="54" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-9">
          <mxGeometry y="80" width="340" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-9" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;get_width() const: int&lt;/span&gt;&lt;div&gt;+ get_height() const: int&lt;/div&gt;&lt;div&gt;+ TerrainContainer()&lt;/div&gt;&lt;div&gt;+ TerrainContainer(awidth: int, aheight: int, def_value: T)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ swap_at(x1&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y1&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, x2&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y2&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ is_valid_coordinate(x&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ is_on_screen(x&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ operator[](row: std::size_t):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;T*&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ operator[](row:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::size_t&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) const: T*&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw(window:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, offx&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, offy: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ generate_world():&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ clear_at(x&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ clear(): void&lt;/div&gt;&lt;div&gt;+ resize(awidth&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, aheight&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;template&amp;lt;Defvalue&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~TerrainContainer()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-9">
          <mxGeometry y="88" width="340" height="222" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-10" value="«interface»&lt;br&gt;&lt;b&gt;Textureable&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1280" y="25" width="290" height="128" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-26" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-10">
          <mxGeometry y="26" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-3" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;~Textureable() = default {&lt;/span&gt;virtual&lt;span style=&quot;background-color: transparent;&quot;&gt;}&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setTexture(filename: std::string):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;= 0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setPosition(double x, double y): void = 0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ draw(sf::RenderWindow&amp;amp; window): void = 0 {virtual}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-10">
          <mxGeometry y="34" width="290" height="94" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-11" value="TextureManager" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="640" y="-30" width="360" height="170" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-19" value="- textures:&amp;nbsp;std::unordered_map&amp;lt;std::string, sf::Texture&amp;gt;&lt;div&gt;- TextureManager()&lt;/div&gt;&lt;div&gt;- ~TextureManager()&lt;/div&gt;&lt;div&gt;-&amp;nbsp;TextureManager(const TextureManager&amp;amp;) {delete}&lt;/div&gt;&lt;div&gt;- operator=(const TextureManager&amp;amp;):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TextureManager&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;|delete|&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-11" vertex="1">
          <mxGeometry y="26" width="360" height="84" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-20" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-11" vertex="1">
          <mxGeometry y="110" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-21" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;static getInstance():&amp;nbsp;&lt;/span&gt;TextureManager&amp;amp;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ loadTexture(const std::string&amp;amp; filename):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::Texture*&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-11" vertex="1">
          <mxGeometry y="118" width="360" height="52" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-13" value="World" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-70" y="178" width="470" height="590" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-4" value="- terrain: TerrainContainer&amp;lt;tiles::Tile*&amp;gt;&lt;div&gt;- entities:&amp;nbsp;std::vector&amp;lt;creature::Living*&amp;gt;&lt;/div&gt;&lt;div&gt;- humans:&amp;nbsp;std::vector&amp;lt;creature::Human*&amp;gt;&lt;/div&gt;&lt;div&gt;- current_city_center: minerals::CityCenter*&lt;/div&gt;&lt;div&gt;-&amp;nbsp;resources:&amp;nbsp;std::unordered_map&amp;lt;std::string, int&amp;gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;structures:&amp;nbsp;std::vector&amp;lt;minerals::Structure*&amp;gt;&lt;/div&gt;&lt;div&gt;- houses:&amp;nbsp;std::vector&amp;lt;minerals::House*&amp;gt;&lt;/div&gt;&lt;div&gt;-&amp;nbsp;sound_player: SoundPlayer&lt;/div&gt;&lt;div&gt;-&amp;nbsp;elapsed_time: float&lt;/div&gt;&lt;div&gt;-&amp;nbsp;camp_needs_spawn: bool&lt;/div&gt;&lt;div&gt;-&amp;nbsp;border_width: int&lt;/div&gt;&lt;div&gt;- border_height: int&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-13">
          <mxGeometry y="26" width="470" height="184" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-13">
          <mxGeometry y="210" width="470" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-6" value="+ World()&lt;div&gt;+ ~World()&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;get_border_width() const: int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_border_height() const: int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ set_border_width(newwidth: int):&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ set_border_height(newheight: int):&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;void draw(sf::RenderWindow&amp;amp; window,float delta_time,int offx, int offy);&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_world(delta_time: float):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ getTileAt(x: int, y: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;tiles::Tile&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ add_resources(what:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, amount:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ remove_resources(what: std::string, amount: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ is_there_enough_resource(from_what:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, needed_amount:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;populate_world():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;spawn_structure(mountain_exclusive: bool): void&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;template&amp;lt;T&amp;gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;spawn_structure_at(x: int, y: int): void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;template&amp;lt;T&amp;gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;spawn_entity(goal_habitat:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;tiles::TILETYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;template&amp;lt;T&amp;gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&amp;nbsp;get_random_suitable_position( suitable_tile:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;tiles::TILETYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): sf::Vector2f&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;build_city_center_at(x: int, y: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&amp;nbsp;try_develop_random_role(human_ptr:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;creature::Human*&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&amp;nbsp;get_structure_type(atype:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;minerals::MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;minerals::Structure*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;remove_structure_at(x: int, y: int): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_position_nearby_town():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::Vector2f&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_random_house_pos():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::Vector2f&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;upgrade_house_at(x: int, y: int): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_excluded_entities(excluded_type:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;creature::ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;creature::Living*&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-13">
          <mxGeometry y="218" width="470" height="372" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-14" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-13" target="12iLxfwusQhPmBF76erP-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-16" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.003;exitY=0.135;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-9" target="pheSlHdzongKRnObtX5m-4" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-21" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-3" target="12iLxfwusQhPmBF76erP-1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
            <Array as="points">
              <mxPoint x="450" y="160" />
              <mxPoint x="215" y="160" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-22" value="" style="endArrow=diamondThin;endFill=0;endSize=24;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-8" target="12iLxfwusQhPmBF76erP-13" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="280" as="sourcePoint" />
            <mxPoint x="490" y="280" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-130" y="305" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-23" value="«interface»&lt;br&gt;&lt;b&gt;Living&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=32;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="940" y="530" width="500" height="730" as="geometry">
            <mxRectangle x="310" y="560" width="100" height="40" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-33" value="-&amp;nbsp;idle_texture_path:&amp;nbsp;std::string&lt;div&gt;- attack_texture_path:&amp;nbsp;std::string&lt;/div&gt;&lt;div&gt;- walk_texture_path:&amp;nbsp;std::string&lt;/div&gt;&lt;div&gt;- run_texture_path:&amp;nbsp;std::string&lt;/div&gt;&lt;div&gt;- death_texture_path:&amp;nbsp;std::string&lt;/div&gt;&lt;div&gt;- sprite: sf::Sprite&lt;/div&gt;&lt;div&gt;- frame_count: int&lt;/div&gt;&lt;div&gt;- animation_speed: float&lt;/div&gt;&lt;div&gt;- current_animation_time: float&lt;/div&gt;&lt;div&gt;# max_age: float&lt;/div&gt;&lt;div&gt;# damaged_by: Living* = nullptr&lt;/div&gt;&lt;div&gt;# gender: ENTITY_GENDER&lt;/div&gt;&lt;div&gt;# state: LIVINGSTATE&lt;/div&gt;&lt;div&gt;# facing: FACING&lt;/div&gt;&lt;div&gt;# health: int&lt;/div&gt;&lt;div&gt;# hit_timer: float = 0.0f&lt;/div&gt;&lt;div&gt;# inner_timer: float&lt;/div&gt;&lt;div&gt;# speed: float&lt;/div&gt;&lt;div&gt;# run_speed_modifier: float&lt;/div&gt;&lt;div&gt;# death_timer: float&lt;/div&gt;&lt;div&gt;+ posx: double&lt;/div&gt;&lt;div&gt;+ posy: dou&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ble&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-23">
          <mxGeometry y="32" width="500" height="328" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-42" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-23">
          <mxGeometry y="360" width="500" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-43" value="&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;damage(dam_by:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Living*&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,amount: int): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_health(amm: int)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;init_spritesheet_data(maxframes: int, animspeed:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;white-space: normal;&quot;&gt;look_left()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;look_right()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_state(newstate:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;LIVINGSTATE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= 0 {virtual}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;setTexture(filename:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;setTheShadow(filename: std::string):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;setPosition(x: double, y: double)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;update_spritesheet(deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;draw(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_idle_texture(new_str: std::string)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_attack_texture(new_str:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_walk_texture(new_str:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_run_texture(new_str:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;set_death_texture(new_str:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::string&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;needs_drawn():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_width() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;die()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= 0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;update_logic(World&amp;amp; world,float deltaTime)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= 0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;draw_logic(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;,deltaTime: float,offx: int,offy: int)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;=0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;shadow_logic(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, elapsed_time: float,offx: int,offy: int)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;apply_age()&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;: void&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-23">
          <mxGeometry y="368" width="500" height="362" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-24" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=-0.001;exitY=0.06;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-33" target="pheSlHdzongKRnObtX5m-6" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-25" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.266;entryY=1.005;entryDx=0;entryDy=0;exitX=0.98;exitY=0;exitDx=0;exitDy=0;entryPerimeter=0;exitPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-23" target="pheSlHdzongKRnObtX5m-2" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1430" y="240" />
              <mxPoint x="1717" y="240" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-27" value="Human" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1495" y="1180" width="320" height="280" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-56" value="#&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;profession:&amp;nbsp;&lt;/span&gt;Profession*&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;# goal:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::Vector2f&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ needs_to_be_royal: bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ needs_promotion: bool&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-27">
          <mxGeometry y="26" width="320" height="74" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-57" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-27">
          <mxGeometry y="100" width="320" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-58" value="+ Human(x: int, y: int)&lt;div&gt;+ Human(x: int, y: int, const_gender: ENTITY_GENDER)&lt;div&gt;+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;~Human();&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ die(): void {override}&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw_logic(window:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ initialize(x: int, y: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ select_texture(x: int, y: int,gender_selector: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-27">
          <mxGeometry y="108" width="320" height="172" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-28" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-58" target="12iLxfwusQhPmBF76erP-23" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="580" as="sourcePoint" />
            <mxPoint x="490" y="580" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1190" y="1374" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-29" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;exitX=0.249;exitY=1.018;exitDx=0;exitDy=0;exitPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="nythkSt9c0sXx7zMsBuC-4" target="12iLxfwusQhPmBF76erP-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="580" as="sourcePoint" />
            <mxPoint x="490" y="580" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-30" value="Goat" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1550" y="720" width="510" height="160" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-53" value="- goal: sf::Vector2f" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-30">
          <mxGeometry y="26" width="510" height="26" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-54" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-30">
          <mxGeometry y="52" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-55" value="+ Goat(x: int, y: int)&lt;div&gt;+ ~Goat()&lt;/div&gt;&lt;div&gt;&lt;div&gt;+ get_type() const:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ die(): void {override}&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw_logic(window:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-30">
          <mxGeometry y="60" width="510" height="100" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-31" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1.001;entryY=0.602;entryDx=0;entryDy=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-53" target="pheSlHdzongKRnObtX5m-33" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="580" as="sourcePoint" />
            <mxPoint x="1450" y="950" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-32" value="«interface»&lt;br&gt;&lt;b&gt;HostileInterface&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="480" y="900" width="370" height="210" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-44" value="# goal: sf::Vector2f&lt;div&gt;#&amp;nbsp;target: Living*&lt;/div&gt;&lt;div&gt;# damage: int&lt;/div&gt;&lt;div&gt;# attack_speed: float&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-32">
          <mxGeometry y="26" width="370" height="74" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-45" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-32">
          <mxGeometry y="100" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-46" value="# try_attack(): void&lt;div&gt;# hostile_run(deltaTime: float): void&lt;/div&gt;&lt;div&gt;# hostile_walk(deltaTime: float): void&lt;/div&gt;&lt;div&gt;+ set_hostile_config(newdamage: int, newattackspeed: float):&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ select_target(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void = 0 {virtual}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~HostileInterface() = default {virtual}&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-32">
          <mxGeometry y="108" width="370" height="102" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-33" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-32" target="12iLxfwusQhPmBF76erP-23" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="580" as="sourcePoint" />
            <mxPoint x="490" y="580" as="targetPoint" />
            <Array as="points">
              <mxPoint x="670" y="713" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-38" value="Bear" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-200" y="930" width="510" height="150" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-48" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-38">
          <mxGeometry y="26" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-47" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Bear(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ die(): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(world:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ draw_logic(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ void select_target(world: World&amp;amp;) {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ ~Bear()&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-38">
          <mxGeometry y="34" width="510" height="116" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-39" value="Crocodile" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-200" y="1110" width="510" height="150" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-49" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-39">
          <mxGeometry y="26" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-50" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Crocodile(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ die(): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(world:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ draw_logic(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ void select_target(world: World&amp;amp;) {override}&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ ~Crocodile()&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-39">
          <mxGeometry y="34" width="510" height="116" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-40" value="KillerRobot" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-200" y="1290" width="510" height="150" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-51" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-40">
          <mxGeometry y="26" width="510" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-52" value="+&amp;nbsp;KillerRobot( x: int, y: int)&lt;div&gt;&lt;div&gt;+ get_type() const:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ENTITY_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ die(): void {override}&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ draw_logic(window:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ void select_target(world: World&amp;amp;) {override}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;+ ~KillerRobot()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-40">
          <mxGeometry y="34" width="510" height="116" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-41" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-38" target="12iLxfwusQhPmBF76erP-32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1490" as="sourcePoint" />
            <mxPoint x="510" y="1490" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-42" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.273;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-39" target="12iLxfwusQhPmBF76erP-32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1490" as="sourcePoint" />
            <mxPoint x="510" y="1490" as="targetPoint" />
            <Array as="points">
              <mxPoint x="580" y="1185" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-43" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.609;entryY=1.02;entryDx=0;entryDy=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-40" target="12iLxfwusQhPmBF76erP-32" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1490" as="sourcePoint" />
            <mxPoint x="510" y="1490" as="targetPoint" />
            <Array as="points">
              <mxPoint x="705" y="1360" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-49" value="Builder" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1140" y="1810" width="350" height="120" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-70" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-49">
          <mxGeometry y="26" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-71" value="+ Builder&lt;span style=&quot;background-color: transparent;&quot;&gt;(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~Builder()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-49">
          <mxGeometry y="34" width="350" height="86" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-50" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.19;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.75;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-49" target="pheSlHdzongKRnObtX5m-58" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1690" as="sourcePoint" />
            <mxPoint x="510" y="1690" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-51" value="Farmer" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1400" y="1973" width="350" height="140" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-68" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-51">
          <mxGeometry y="26" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-69" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Farmer(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~Farmer()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-51">
          <mxGeometry y="34" width="350" height="106" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-52" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.431;entryY=1.013;entryDx=0;entryDy=0;exitX=0.397;exitY=-0.021;exitDx=0;exitDy=0;exitPerimeter=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-51" target="pheSlHdzongKRnObtX5m-58" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1690" as="sourcePoint" />
            <mxPoint x="510" y="1690" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1540" y="1600" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-53" value="Fisherman" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="885" y="1420" width="350" height="130" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-77" value="# fishing: bool" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-53">
          <mxGeometry y="26" width="350" height="26" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-76" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-53">
          <mxGeometry y="52" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-78" value="+ Fisherman&lt;span style=&quot;background-color: transparent;&quot;&gt;(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~Fisherman()&lt;/div&gt;&lt;div&gt;# try_fishing(world: World&amp;amp;): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-53">
          <mxGeometry y="60" width="350" height="70" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-54" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-77" target="12iLxfwusQhPmBF76erP-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1690" as="sourcePoint" />
            <mxPoint x="510" y="1690" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-55" value="King" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1620" y="1810" width="350" height="130" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-66" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-55">
          <mxGeometry y="26" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-67" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;King(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~King()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-55">
          <mxGeometry y="34" width="350" height="96" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-56" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.927;entryY=1.04;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-55" target="12iLxfwusQhPmBF76erP-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1690" as="sourcePoint" />
            <mxPoint x="510" y="1690" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-57" value="Soldier" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1930" y="1560" width="350" height="150" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-63" value="- target: Living*&lt;div&gt;- damage: int&lt;/div&gt;&lt;div&gt;- attack_speed: float&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-57">
          <mxGeometry y="26" width="350" height="54" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-64" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-57">
          <mxGeometry y="80" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-65" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Soldier(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~Soldier()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-57">
          <mxGeometry y="88" width="350" height="62" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-58" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;exitX=0.25;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-57" target="12iLxfwusQhPmBF76erP-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1320" as="sourcePoint" />
            <mxPoint x="510" y="1320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-59" value="Stonemason" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="885" y="1580" width="370" height="130" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-72" value="# mining_iron: bool" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-59">
          <mxGeometry y="26" width="370" height="24" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-73" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-59">
          <mxGeometry y="50" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-74" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Stonemason(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~Stonemason()&lt;/div&gt;&lt;div&gt;# try_mine(world: World&amp;amp;): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-59">
          <mxGeometry y="58" width="370" height="72" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-60" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.034;entryY=0.995;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-72" target="pheSlHdzongKRnObtX5m-58" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1690" as="sourcePoint" />
            <mxPoint x="510" y="1690" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-61" value="Woodcutter" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1970" y="1370" width="350" height="90" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-60" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-61">
          <mxGeometry y="26" width="350" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-61" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Woodcutter(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(world:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ ~Woodcutter()&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-61">
          <mxGeometry y="34" width="350" height="56" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-62" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=1;entryY=0.75;entryDx=0;entryDy=0;exitX=0;exitY=0.25;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-61" target="12iLxfwusQhPmBF76erP-27" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1420" as="sourcePoint" />
            <mxPoint x="510" y="1420" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-63" value="AnglerMiner" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="360" y="1530" width="380" height="90" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-79" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-63">
          <mxGeometry y="26" width="380" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-80" value="+&amp;nbsp;&lt;span style=&quot;text-align: center;&quot;&gt;AnglerMiner&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;(x: int, y: int, gender_modifier:&amp;nbsp;&lt;/span&gt;ENTITY_GENDER&lt;span style=&quot;background-color: transparent;&quot;&gt;)&lt;/span&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;+ update_logic(world:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;World&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ ~&lt;span style=&quot;text-align: center;&quot;&gt;AnglerMiner&lt;/span&gt;()&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-63">
          <mxGeometry y="34" width="380" height="56" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-64" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1.007;exitY=0.171;exitDx=0;exitDy=0;exitPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-63" target="pheSlHdzongKRnObtX5m-78" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="350" y="1994" as="sourcePoint" />
            <mxPoint x="510" y="1994" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-65" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-80" target="pheSlHdzongKRnObtX5m-74" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="540" y="2124" as="sourcePoint" />
            <mxPoint x="510" y="1994" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-67" value="Tile" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="980" y="170" width="290" height="170" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-7" value="- sprite: sf::Sprite&lt;div&gt;- inner_type: TILETYPE&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-67" vertex="1">
          <mxGeometry y="26" width="290" height="44" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-8" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="12iLxfwusQhPmBF76erP-67" vertex="1">
          <mxGeometry y="70" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-9" value="+ init(newtype: TILETYPE): void&lt;div&gt;+ get_type() const:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TILETYPE&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;setTexture(filename: std::string):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ setPosition(double x, double y):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ draw(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="12iLxfwusQhPmBF76erP-67" vertex="1">
          <mxGeometry y="78" width="290" height="92" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-68" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-67" target="12iLxfwusQhPmBF76erP-9" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="850" y="260" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-70" value="«interface»&lt;br&gt;&lt;b&gt;Structure&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1980" y="405" width="470" height="220" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-10" value="- sprite:&amp;nbsp;sf::Sprite&lt;div&gt;+ posx: int&lt;/div&gt;&lt;div&gt;+ posy: int&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-70">
          <mxGeometry y="26" width="470" height="54" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-70">
          <mxGeometry y="80" width="470" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-12" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Structure(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;setTexture(filename: std::string): bool {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;setPosition(x:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, y:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;double&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;draw(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;needs_drawn(): bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= 0 {&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;update_logic(deltaTime: float):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;= 0&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;virtual&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;draw_logic(window:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;sf::RenderWindow&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, elapsed_time:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;, offx: int, offy: int):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-70">
          <mxGeometry y="88" width="470" height="132" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-71" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.998;entryY=0.336;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-70" target="pheSlHdzongKRnObtX5m-6" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="280" as="sourcePoint" />
            <mxPoint x="1220" y="383" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-72" value="«interface»&lt;br&gt;&lt;b&gt;ResourceStructure&lt;/b&gt;" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=40;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2580" y="440" width="260" height="150" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-21" value="- inner_timer: float&lt;div&gt;- harvested: bool&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-72">
          <mxGeometry y="40" width="260" height="40" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-22" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-72">
          <mxGeometry y="80" width="260" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-23" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;get_harvest&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ed() const: bool&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ ResourceStructure(x: int, y: int)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ harvest(): bool = 0 {virtual}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-72">
          <mxGeometry y="88" width="260" height="62" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-74" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-72" target="12iLxfwusQhPmBF76erP-70" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="870" y="380" as="sourcePoint" />
            <mxPoint x="1030" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-75" value="BerryBush" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2570" y="212" width="280" height="118" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-75">
          <mxGeometry y="26" width="280" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-24" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;BerryBush(x: int,y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ refill_berries(): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ harvest():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-75">
          <mxGeometry y="34" width="280" height="84" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-77" value="CityCenter" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1545" y="290" width="270" height="180" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-15" value="-&amp;nbsp;current_house_count: int&lt;div&gt;- settlement_age: float&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-77">
          <mxGeometry y="26" width="270" height="44" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-16" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-77">
          <mxGeometry y="70" width="270" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-17" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;CityCenter(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;is_there_room_for_housing():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;register_new_house():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;update_logic(deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;&amp;nbsp;get_settlement_age(): std::string&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-77">
          <mxGeometry y="78" width="270" height="102" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-78" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-17" target="pheSlHdzongKRnObtX5m-10" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="870" y="280" as="sourcePoint" />
            <mxPoint x="1030" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-79" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-75" target="12iLxfwusQhPmBF76erP-72" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1520" y="80" as="sourcePoint" />
            <mxPoint x="1680" y="80" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-80" value="House" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2080" y="680" width="270" height="190" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-18" value="- inner_timer: float&lt;div&gt;- texture_variation: int&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+ level: int&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+ stone_req: int&lt;/div&gt;&lt;div&gt;+ wood_req: int&lt;/div&gt;&lt;div&gt;+ iron_req: int&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-80">
          <mxGeometry y="26" width="270" height="94" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-19" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-80">
          <mxGeometry y="120" width="270" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-20" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;House(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(deltaTime:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;float&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void {override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-80">
          <mxGeometry y="128" width="270" height="62" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-81" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-80" target="12iLxfwusQhPmBF76erP-70" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="870" y="380" as="sourcePoint" />
            <mxPoint x="1030" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-82" value="Iron" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2575" y="660" width="270" height="100" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-27" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-82">
          <mxGeometry y="26" width="270" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-28" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Iron(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ harvest():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-82">
          <mxGeometry y="34" width="270" height="66" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-83" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-82" target="12iLxfwusQhPmBF76erP-72" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1520" y="180" as="sourcePoint" />
            <mxPoint x="1680" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-84" value="Stone" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2980" y="330" width="300" height="140" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-31" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-84">
          <mxGeometry y="26" width="300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-32" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Stone(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(deltaTime: float):&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ harvest():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;{override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-84">
          <mxGeometry y="34" width="300" height="106" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-85" value="Tree" style="html=1;whiteSpace=wrap;shape=swimlane;fontStyle=0;startSize=26;childLayout=stackLayout;horizontal=1;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="3010" y="600" width="270" height="110" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-29" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="12iLxfwusQhPmBF76erP-85">
          <mxGeometry y="26" width="270" height="8" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-30" value="+&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Tree(x: int, y: int)&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ get_type() const:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;MINERAL_TYPE&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ update_logic(deltaTime: float): void {override}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre; white-space: normal;&quot;&gt;&#x9;&#x9;&#x9;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;+ harvest(): bool {override}&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="12iLxfwusQhPmBF76erP-85">
          <mxGeometry y="34" width="270" height="76" as="geometry" />
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-86" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-85" target="12iLxfwusQhPmBF76erP-72" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1520" y="180" as="sourcePoint" />
            <mxPoint x="1680" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="12iLxfwusQhPmBF76erP-87" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=1;entryY=0;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-32" target="12iLxfwusQhPmBF76erP-72" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1520" y="180" as="sourcePoint" />
            <mxPoint x="1680" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1Htj7xXL7MbQygBtg9fc-0" value="SaveManager" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-370" y="170" width="220" height="150" as="geometry" />
        </mxCell>
        <mxCell id="1Htj7xXL7MbQygBtg9fc-1" value="-&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;fileName: string&lt;/span&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1Htj7xXL7MbQygBtg9fc-0" vertex="1">
          <mxGeometry y="26" width="220" height="26" as="geometry" />
        </mxCell>
        <mxCell id="1Htj7xXL7MbQygBtg9fc-2" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="1Htj7xXL7MbQygBtg9fc-0" vertex="1">
          <mxGeometry y="52" width="220" height="8" as="geometry" />
        </mxCell>
        <mxCell id="1Htj7xXL7MbQygBtg9fc-3" value="+ saveFile(): void&lt;div&gt;+ loadFile(): void&lt;/div&gt;&lt;div&gt;+ deleteFile(): void&lt;/div&gt;&lt;div&gt;+&amp;nbsp;SaveManager(file:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;const std::string&amp;amp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;)&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="1Htj7xXL7MbQygBtg9fc-0" vertex="1">
          <mxGeometry y="60" width="220" height="90" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-25" value="Button" style="swimlane;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-370" y="-240" width="310" height="220" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-26" value="- x: int&lt;div&gt;- y: int&lt;/div&gt;&lt;div&gt;- width: int&lt;/div&gt;&lt;div&gt;- height: int&lt;/div&gt;&lt;div&gt;- callback:&amp;nbsp;std::function&amp;lt;void()&amp;gt;&lt;/div&gt;&lt;div&gt;- clicked: bool&lt;/div&gt;&lt;div&gt;- labeltext: std::string&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="AKh80FKi0b8XwNm-L5GY-25" vertex="1">
          <mxGeometry y="26" width="310" height="114" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-29" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="AKh80FKi0b8XwNm-L5GY-25" vertex="1">
          <mxGeometry y="140" width="310" height="8" as="geometry" />
        </mxCell>
        <mxCell id="AKh80FKi0b8XwNm-L5GY-28" value="+&amp;nbsp;Button(x: int, y: int, width: int, height: int, l: std::string)&lt;div&gt;+ setCallback(func:&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;std::function&amp;lt;void()&amp;gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;): void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+&amp;nbsp;checkClicked(clickX: int, clickY: int): bool&lt;/div&gt;&lt;div&gt;+ onClick(clickX: int, clickY: int): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="AKh80FKi0b8XwNm-L5GY-25" vertex="1">
          <mxGeometry y="148" width="310" height="72" as="geometry" />
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-0" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.769;entryY=0.995;entryDx=0;entryDy=0;exitX=0;exitY=0;exitDx=0;exitDy=0;entryPerimeter=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-4" target="pheSlHdzongKRnObtX5m-3" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1038" y="712" as="sourcePoint" />
            <mxPoint x="760" y="570" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nythkSt9c0sXx7zMsBuC-5" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-67" target="pheSlHdzongKRnObtX5m-3" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1030" y="600" as="sourcePoint" />
            <mxPoint x="790" y="555" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1125" y="106" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-13" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;exitX=0.143;exitY=-0.005;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-70" target="pheSlHdzongKRnObtX5m-0">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="661" y="351" as="sourcePoint" />
            <mxPoint x="60" y="610" as="targetPoint" />
            <Array as="points">
              <mxPoint x="2047" y="-156" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-14" value="Extends" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;exitX=0;exitY=0.735;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-12">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1160" y="400" as="sourcePoint" />
            <mxPoint x="1570" y="120" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1930" y="590" />
              <mxPoint x="1930" y="120" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-34" value="Fake SFML" style="shape=folder;fontStyle=1;spacingTop=10;tabWidth=40;tabHeight=14;tabPosition=left;html=1;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="-350" width="70" height="50" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-35" value="SFML" style="shape=folder;fontStyle=1;spacingTop=10;tabWidth=40;tabHeight=14;tabPosition=left;html=1;whiteSpace=wrap;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="480" y="-450" width="70" height="50" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-39" value="Jporta" style="rhombus;whiteSpace=wrap;html=1;fontColor=#000000;fillColor=#ffffc0;strokeColor=#ff0000;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="300" y="-450" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-40" value="no" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=bottom;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;" edge="1" source="pheSlHdzongKRnObtX5m-39" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="480" y="-430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-41" value="yes" style="edgeStyle=orthogonalEdgeStyle;html=1;align=left;verticalAlign=top;endArrow=open;endSize=8;strokeColor=#ff0000;rounded=0;" edge="1" source="pheSlHdzongKRnObtX5m-39" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-1" relative="1" as="geometry">
            <mxPoint x="340" y="-350" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-83" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.416;entryY=0.988;entryDx=0;entryDy=0;exitX=0.911;exitY=-0.002;exitDx=0;exitDy=0;entryPerimeter=0;exitPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-23" target="pheSlHdzongKRnObtX5m-3">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="330" y="380" as="sourcePoint" />
            <mxPoint x="490" y="380" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1400" y="220" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-86" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.999;entryY=0.414;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="pheSlHdzongKRnObtX5m-17" target="pheSlHdzongKRnObtX5m-6">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1990" y="525" as="sourcePoint" />
            <mxPoint x="409" y="531" as="targetPoint" />
            <Array as="points">
              <mxPoint x="900" y="419" />
              <mxPoint x="900" y="550" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-89" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0.999;exitY=0.852;exitDx=0;exitDy=0;entryX=0.003;entryY=0.889;entryDx=0;entryDy=0;entryPerimeter=0;exitPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="AKh80FKi0b8XwNm-L5GY-26" target="AKh80FKi0b8XwNm-L5GY-10">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="205" y="-92" as="sourcePoint" />
            <mxPoint x="-30" y="-110" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="pheSlHdzongKRnObtX5m-90" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1.001;entryY=0.646;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="12iLxfwusQhPmBF76erP-27" target="pheSlHdzongKRnObtX5m-6">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1280" y="1282" as="sourcePoint" />
            <mxPoint x="880" y="1240" as="targetPoint" />
            <Array as="points">
              <mxPoint x="910" y="1320" />
              <mxPoint x="910" y="640" />
            </Array>
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
